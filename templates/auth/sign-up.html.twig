{% extends "mazer/auth.html.twig" %}

{% block body %}
	<div class="row h-100">
		<div class="col-lg-5 col-12">
			<div id="auth-left">
				<div class="auth-logo">
					<a href="index.html"><img src="/images/logo/logo.png" alt="Logo"></a>
				</div>
				<h1 class="auth-title">Sign Up</h1>
				<p class="auth-subtitle mb-5">Input your data to register to our website.</p>
				{{ form_start(form, {'attr': {'class': 'was-validated', 'oninput':'user[password][second].setCustomValidity(user[password][second].value != user[password][first].value ? "Passwords do not match." : "")'}}) }}
				<div class="form-group position-relative has-icon-left mb-4">
					{{form_widget(form.email, {'attr': {'class': 'form-control form-control-xl is-vaild', 'placeholder':'Email'}})}}
					<div class="form-control-icon">
						<i class="bi bi-envelope"></i>
					</div>
				</div>
				<div class="form-group position-relative has-icon-left mb-4">
					{{form_widget(form.password.first, {'attr': {'class': 'form-control form-control-xl', 'placeholder':'Password', 'aria-describedby': 'inputGroupPrepend'}})}}
					<div class="form-control-icon">
						<i class="bi bi-shield-lock"></i>
					</div>
				</div>
				<div class="form-group position-relative has-icon-left mb-4">
					{{form_widget(form.password.second, {'attr': {'class': 'form-control form-control-xl', 'placeholder':'Confirm Password', 'aria-describedby': 'inputGroupPrepend'}})}}
					<div class="form-control-icon">
						<i class="bi bi-shield-lock"></i>
					</div>
				</div>

				<button class="btn btn-primary btn-block btn-lg shadow-lg mt-5">Sign Up</button>
				{{ form_end(form) }}
				<div class="text-center mt-5 text-lg fs-4">
					<p class='text-gray-600'>Already have an account?
						<a href="{{path('login')}}" class="font-bold">Login</a>.
					</p>
				</div>
			</div>
		</div>
		<div class="col-lg-7 d-none d-lg-block">
			<div id="auth-right"></div>
		</div>
	</div>
	<script>
	// Check if passwords match
	$("#pwdId, #confirmPassword").on("keyup", function () {
	if (
		$("#user_password_first").val() != "" &&
		$("#user_password_second").val() != "" &&
		$("#user_password_second").val() == $("#user_password_second").val()
	) {
	}
	});

	// Example starter JavaScript for disabling form submissions if there are invalid fields
	(function () {
	"use strict";
	window.addEventListener(
		"load",
		function () {
		// Fetch all the forms we want to apply custom Bootstrap validation styles to
		var forms = document.getElementsByClassName("needs-validation");
		// Loop over them and prevent submission
		var validation = Array.prototype.filter.call(forms, function (form) {
			form.addEventListener(
			"submit",
			function (event) {
				if (form.checkValidity() === false) {
				event.preventDefault();
				event.stopPropagation();
				}
				form.classList.add("was-validated");
			},
			false
			);
		});
		},
		false
	);
	})();

	</script>

{% endblock %}
